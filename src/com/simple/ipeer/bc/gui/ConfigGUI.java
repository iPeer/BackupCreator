/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package com.simple.ipeer.bc.gui;

import com.simple.ipeer.bc.files.BackupFile;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JFileChooser;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author iPeer
 */
public class ConfigGUI extends javax.swing.JDialog {
    
    public ArrayList<BackupFile> fileList = new ArrayList<BackupFile>();
    
    /**
     * Creates new form ConfigGUI
     */
    public ConfigGUI() {
	initComponents();
	customPath.getDocument().addDocumentListener(new DocumentListener() {
	    @Override
	    public void changedUpdate(DocumentEvent e) {
		checkValidDirectory();
	    }
	    @Override
	    public void removeUpdate(DocumentEvent e) {
		checkValidDirectory();
	    }
	    @Override
	    public void insertUpdate(DocumentEvent e) {
		checkValidDirectory();
	    }
	});
    }
    
    private void checkValidDirectory() {
	String path = customPath.getText();
	if (path.equals("")) { return; }
	File f = new File(path);
	if (f.isDirectory() || f.exists())
	    customPath.setBackground(new Color(166, 255, 107));
	else
	    customPath.setBackground(new Color(255, 89, 71));
	
	
    }
    
    public void updateTable() {
	DefaultTableModel dtm = (DefaultTableModel)pathList.getModel();
	dtm.setRowCount(0);
	for (Iterator<BackupFile> it = fileList.iterator(); it.hasNext();) {
	    addToList(it.next(), false);
	}
	dtm.fireTableDataChanged();
	dtm.fireTableStructureChanged();
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pathListMenu = new javax.swing.JPopupMenu();
        editEntry = new javax.swing.JMenuItem();
        deleteEntry = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        cancelButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        addFolderButton = new javax.swing.JButton();
        addFileButton = new javax.swing.JButton();
        customPath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        addCustomButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        failBehaviorCombo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        logWhatCombo = new javax.swing.JComboBox();
        pathListPane = new javax.swing.JScrollPane();
        pathList = new javax.swing.JTable() {
            public boolean isCellEditable(int row, int column) {
                return false;
            };
        };
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        backupLocationSelect = new javax.swing.JButton();

        editEntry.setText("Edit Entry");
        editEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEntryActionPerformed(evt);
            }
        });
        pathListMenu.add(editEntry);

        deleteEntry.setText("Delete Entry");
        deleteEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEntryActionPerformed(evt);
            }
        });
        pathListMenu.add(deleteEntry);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Config Creator");

        jLabel1.setText("Load existing config");

        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("");

        saveButton.setText("Save Config");

        addFolderButton.setText("Add Folder");
        addFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFolderButtonActionPerformed(evt);
            }
        });

        addFileButton.setText("Add File");
        addFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFileButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Use the buttons to the left or enter a path manually to add it");

        addCustomButton.setText("Add");
        addCustomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("If a file cannot be backed up...");

        failBehaviorCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Skip it and continue", "Cancel the entire backup" }));
        failBehaviorCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                failBehaviorComboActionPerformed(evt);
            }
        });

        jLabel5.setText("Log...");

        logWhatCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Everything", "Failures Only", "Nothing" }));

        pathListPane.setDoubleBuffered(true);

        pathList.addMouseListener(

            new MouseAdapter() {

                @Override
                public void mouseReleased(MouseEvent e) {
                    if (e.isPopupTrigger()) {
                        JTable source = (JTable)e.getSource();
                        Point point = e.getPoint();
                        int row = source.rowAtPoint(point);
                        int column = source.columnAtPoint(point);
                        if (!source.isRowSelected(row))
                        source.changeSelection(row, column, false, false);
                        pathListMenu.show(source, e.getX(), e.getY());

                    }
                }

            }

        );
        pathList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Path", "Backup Directory", "Extensions"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pathList.setMaximumSize(new java.awt.Dimension(0, 0));
        pathList.setMinimumSize(new java.awt.Dimension(0, 0));
        pathListPane.setViewportView(pathList);

        jLabel3.setText("Save backup to...");

        backupLocationSelect.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pathListPane)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(customPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addCustomButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(failBehaviorCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logWhatCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addFolderButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addFileButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(backupLocationSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 474, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cancelButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addFolderButton)
                    .addComponent(addFileButton)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustomButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pathListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backupLocationSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(failBehaviorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(logWhatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void failBehaviorComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_failBehaviorComboActionPerformed
	// TODO add your handling code here:
    }//GEN-LAST:event_failBehaviorComboActionPerformed
    
    private void addFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFolderButtonActionPerformed
	showFileSelectionDialog(true);
    }//GEN-LAST:event_addFolderButtonActionPerformed
    
    private void addFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFileButtonActionPerformed
	showFileSelectionDialog(false);
    }//GEN-LAST:event_addFileButtonActionPerformed

    private void editEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEntryActionPerformed
	Component source = (Component)evt.getSource();
	JPopupMenu menu = (JPopupMenu)source.getParent();
	JTable table = (JTable)menu.getInvoker();
	BackupFile bf = fileList.get(table.getSelectedRow());
	EntrySettingsGUI gui = new EntrySettingsGUI(bf, this, table.getSelectedRow(), false);
	gui.setModal(true);
	gui.setLocationRelativeTo(this);
	gui.setVisible(true);
    }//GEN-LAST:event_editEntryActionPerformed

    private void deleteEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEntryActionPerformed
        Component source = (Component)evt.getSource();
	JPopupMenu menu = (JPopupMenu)source.getParent();
	JTable table = (JTable)menu.getInvoker();
	int row = table.getSelectedRow();
	fileList.remove(row);
	updateTable();
    }//GEN-LAST:event_deleteEntryActionPerformed

    private void addCustomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomButtonActionPerformed
        File f = new File(customPath.getText());
	if (!(f.isDirectory() || f.exists())) { return; }
	if (!f.isFile() && !customPath.getText().endsWith(System.getProperty("file.separator")))
	    customPath.setText(customPath.getText()+System.getProperty("file.separator"));
	EntrySettingsGUI gui = new EntrySettingsGUI(new BackupFile(f.getAbsolutePath(), !f.isDirectory(), ""), this, pathList.getRowCount(), true);
	gui.setModal(true);
	gui.setLocationRelativeTo(this);
	gui.setVisible(true);
    }//GEN-LAST:event_addCustomButtonActionPerformed
    
    
    private void showFileSelectionDialog(boolean foldersOnly) {
	final JFileChooser fc = new JFileChooser();
	fc.setFileSelectionMode(foldersOnly ? JFileChooser.DIRECTORIES_ONLY : JFileChooser.FILES_ONLY);
	fc.setMultiSelectionEnabled(true);
	if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
	    File[] files = fc.getSelectedFiles();
	    for (File f : files) {
		addToList(f);
	    }
	}
    }
    
    private void addToList(File f) {
	addToList(f, true);
    }
    
        private void addToList(BackupFile f) {
	addToList(f, true);
    }
    
    private void addToList(File f, boolean addToArray) {
	DefaultTableModel dtm = (DefaultTableModel)pathList.getModel();
	BackupFile fo = new BackupFile(f.getAbsolutePath(), !f.isDirectory(), "");
	Object[] data = fo.asArray();
	if (addToArray)
	    fileList.add(fo);
	dtm.addRow(data);
    }
    
    private void addToList(BackupFile f, boolean addToArray) {
	DefaultTableModel dtm = (DefaultTableModel)pathList.getModel();
	Object[] data = f.asArray();
	if (addToArray)
	    fileList.add(f);
	dtm.addRow(data);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
	/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
	* For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
	*/
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex) {
	    java.util.logging.Logger.getLogger(ConfigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex) {
	    java.util.logging.Logger.getLogger(ConfigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex) {
	    java.util.logging.Logger.getLogger(ConfigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(ConfigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>
	
	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable() {
	    public void run() {
		new ConfigGUI().setVisible(true);
	    }
	});
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomButton;
    private javax.swing.JButton addFileButton;
    private javax.swing.JButton addFolderButton;
    private javax.swing.JButton backupLocationSelect;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField customPath;
    private javax.swing.JMenuItem deleteEntry;
    private javax.swing.JMenuItem editEntry;
    private javax.swing.JComboBox failBehaviorCombo;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox logWhatCombo;
    private javax.swing.JTable pathList;
    private javax.swing.JPopupMenu pathListMenu;
    private javax.swing.JScrollPane pathListPane;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
